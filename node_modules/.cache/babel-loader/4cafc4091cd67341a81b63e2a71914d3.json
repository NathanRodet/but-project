{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\franc\\\\Documents\\\\GitHub\\\\but-project\\\\src\\\\components\\\\Tabs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nexport const Tab = ({\n  title,\n  onClick,\n  active = false\n}) => {\n  const onClickTab = e => {\n    e.preventDefault(0);\n    onClick(title);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: `${active ? \"active\" : \"\"} tab-item`,\n      onClick: onClickTab,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        li.tab-item {\n          list-style-type: none;\n          padding: 1rem 2rem;\n          background-color: #b2beb5;\n          font-weight: bold;\n          text-transform: uppercase;\n          letter-spacing: 0.1rem;\n          cursor: pointer;\n          transition: all 0.5s ease;\n        }\n\n        li.tab-item:hover,\n        li.tab-item.active {\n          background-color: #76fa97;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Tab;\nexport default function Tabs({\n  children\n}) {\n  _s();\n\n  const [activeTab, setActiveTab] = useState(children[0].props.title);\n\n  const onClickTabItem = tab => setActiveTab(tab);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"tab-list\",\n        children: children.map(tab => {\n          const {\n            title\n          } = tab.props;\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            title: title,\n            onClick: onClickTabItem,\n            active: title === activeTab ? true : false\n          }, title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: children.map(tab => {\n          if (tab.props.title !== activeTab) return undefined;\n          return tab.props.children;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: \"true\",\n      children: `\n        .tab-list {\n          padding: 0;\n          display: flex;\n        }\n\n        .tab-content {\n          padding: 0 1rem;\n        }\n\n        .tab-content p {\n          text-align: justify;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Tabs, \"sCT2ThEjDdxc8vrSxzPO5KXS70E=\");\n\n_c2 = Tabs;\nTab.propTypes = {\n  title: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nTabs.propTypes = {\n  children: PropTypes.instanceOf(Array).isRequired\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Tab\");\n$RefreshReg$(_c2, \"Tabs\");","map":{"version":3,"sources":["C:/Users/franc/Documents/GitHub/but-project/src/components/Tabs.js"],"names":["React","useState","PropTypes","Tab","title","onClick","active","onClickTab","e","preventDefault","Tabs","children","activeTab","setActiveTab","props","onClickTabItem","tab","map","undefined","propTypes","string","isRequired","func","instanceOf","Array"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,MAAM,GAAG;AAA3B,CAAD,KAAwC;AACzD,QAAMC,UAAU,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF,CAAiB,CAAjB;AACAJ,IAAAA,OAAO,CAACD,KAAD,CAAP;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAG,GAAEE,MAAM,GAAG,QAAH,GAAc,EAAG,WAAzC;AAAqD,MAAA,OAAO,EAAEC,UAA9D;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA,gBAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBM;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAyBD,CA/BM;KAAMD,G;AAiCb,eAAe,SAASO,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA4B;AAAA;;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACU,QAAQ,CAAC,CAAD,CAAR,CAAYG,KAAZ,CAAkBV,KAAnB,CAA1C;;AAEA,QAAMW,cAAc,GAAGC,GAAG,IAAIH,YAAY,CAACG,GAAD,CAA1C;;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBACGL,QAAQ,CAACM,GAAT,CAAaD,GAAG,IAAI;AACnB,gBAAM;AAAEZ,YAAAA;AAAF,cAAYY,GAAG,CAACF,KAAtB;AAEA,8BACE,QAAC,GAAD;AAEE,YAAA,KAAK,EAAEV,KAFT;AAGE,YAAA,OAAO,EAAEW,cAHX;AAIE,YAAA,MAAM,EAAEX,KAAK,KAAKQ,SAAV,GAAsB,IAAtB,GAA6B;AAJvC,aACOR,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SAXA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACGO,QAAQ,CAACM,GAAT,CAAaD,GAAG,IAAI;AACnB,cAAIA,GAAG,CAACF,KAAJ,CAAUV,KAAV,KAAoBQ,SAAxB,EAAmC,OAAOM,SAAP;AAEnC,iBAAOF,GAAG,CAACF,KAAJ,CAAUH,QAAjB;AACD,SAJA;AADH;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA0BE;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA,gBAAoB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbM;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA,kBADF;AA2CD;;GAhDuBD,I;;MAAAA,I;AAkDxBP,GAAG,CAACgB,SAAJ,GAAgB;AACdf,EAAAA,KAAK,EAAEF,SAAS,CAACkB,MAAV,CAAiBC,UADV;AAEdhB,EAAAA,OAAO,EAAEH,SAAS,CAACoB,IAAV,CAAeD;AAFV,CAAhB;AAKAX,IAAI,CAACS,SAAL,GAAiB;AACfR,EAAAA,QAAQ,EAAET,SAAS,CAACqB,UAAV,CAAqBC,KAArB,EAA4BH;AADvB,CAAjB","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Tab = ({ title, onClick, active = false }) => {\r\n  const onClickTab = e => {\r\n    e.preventDefault(0);\r\n    onClick(title);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li className={`${active ? \"active\" : \"\"} tab-item`} onClick={onClickTab}>\r\n        {title}\r\n      </li>\r\n\r\n      <style jsx=\"true\">{`\r\n        li.tab-item {\r\n          list-style-type: none;\r\n          padding: 1rem 2rem;\r\n          background-color: #b2beb5;\r\n          font-weight: bold;\r\n          text-transform: uppercase;\r\n          letter-spacing: 0.1rem;\r\n          cursor: pointer;\r\n          transition: all 0.5s ease;\r\n        }\r\n\r\n        li.tab-item:hover,\r\n        li.tab-item.active {\r\n          background-color: #76fa97;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function Tabs({ children }) {\r\n  const [activeTab, setActiveTab] = useState(children[0].props.title);\r\n\r\n  const onClickTabItem = tab => setActiveTab(tab);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"tabs\">\r\n        <ul className=\"tab-list\">\r\n          {children.map(tab => {\r\n            const { title } = tab.props;\r\n\r\n            return (\r\n              <Tab\r\n                key={title}\r\n                title={title}\r\n                onClick={onClickTabItem}\r\n                active={title === activeTab ? true : false}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n        <div className=\"tab-content\">\r\n          {children.map(tab => {\r\n            if (tab.props.title !== activeTab) return undefined;\r\n\r\n            return tab.props.children;\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx=\"true\">{`\r\n        .tab-list {\r\n          padding: 0;\r\n          display: flex;\r\n        }\r\n\r\n        .tab-content {\r\n          padding: 0 1rem;\r\n        }\r\n\r\n        .tab-content p {\r\n          text-align: justify;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n}\r\n\r\nTab.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n};\r\n\r\nTabs.propTypes = {\r\n  children: PropTypes.instanceOf(Array).isRequired\r\n};\r\n"]},"metadata":{},"sourceType":"module"}